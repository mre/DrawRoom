# This file is generated by /opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_ports_python_py26-numpy/work/numpy-1.5.1/setup.py
# It contains system_info results at the time of building this package.
__all__ = ["get_info","show"]

atlas_threads_info={'libraries': ['lapack', 'ptf77blas', 'ptcblas', 'atlas'], 'library_dirs': ['/opt/local/lib'], 'language': 'f77', 'include_dirs': ['/opt/local/include']}
blas_opt_info={'libraries': ['ptf77blas', 'ptcblas', 'atlas'], 'library_dirs': ['/opt/local/lib'], 'language': 'c', 'define_macros': [('ATLAS_INFO', '"\\"3.8.3\\""')], 'include_dirs': ['/opt/local/include']}
atlas_blas_threads_info={'libraries': ['ptf77blas', 'ptcblas', 'atlas'], 'library_dirs': ['/opt/local/lib'], 'language': 'c', 'include_dirs': ['/opt/local/include']}
lapack_opt_info={'libraries': ['lapack', 'ptf77blas', 'ptcblas', 'atlas'], 'library_dirs': ['/opt/local/lib'], 'language': 'f77', 'define_macros': [('ATLAS_INFO', '"\\"3.8.3\\""')], 'include_dirs': ['/opt/local/include']}
lapack_mkl_info={}
blas_mkl_info={}
mkl_info={}

def get_info(name):
    g = globals()
    return g.get(name, g.get(name + "_info", {}))

def show():
    for name,info_dict in globals().items():
        if name[0] == "_" or type(info_dict) is not type({}): continue
        print(name + ":")
        if not info_dict:
            print("  NOT AVAILABLE")
        for k,v in info_dict.items():
            v = str(v)
            if k == "sources" and len(v) > 200:
                v = v[:60] + " ...\n... " + v[-60:]
            print("    %s = %s" % (k,v))
    